{"version":3,"file":"static/webpack/static/development/pages/index.js.7d11ec9126e751d22a2a.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../components/Header\";\nimport Layout from \"../layouts\";\nimport fetch from \"isomorphic-unfetch\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nclass Home extends Component {\n  state = { error: null };\n  handleStop = containerId => {\n    axios\n      .post(\"http://localhost:3000/api/docker/stop\", { id: containerId })\n      .then(response => {\n        Router.push(\"/\");\n      })\n      .catch(error => {\n        this.setState({ error: \"Something went wrong\" });\n      });\n  };\n  render() {\n    console.log(this.props.containers);\n    return (\n      <Layout>\n        <Header />\n        <div className=\"container-fluid\">\n          <h1>Conatiners </h1>\n          {this.state.error ? (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              {this.state.error}\n            </div>\n          ) : null}\n          <ul className=\"list-group\">\n            {this.props.containers.map((cnt, i) => {\n              const isPort = cnt.ports === \"\" ? false : true;\n              if (isPort) {\n                var one = cnt.ports.split(\":\");\n                var two = one[1].split(\"->\");\n                var port = two[0];\n              }\n              const status = cnt.status.indexOf(\"Up\");\n              console.log(status);\n              const containerId = cnt[\"container id\"];\n              return (\n                <li\n                  key={i}\n                  className=\"list-group-item d-flex justify-content-between align-items-center\"\n                >\n                  {isPort ? (\n                    <a target=\"_blank\" href={`http://localhost:${port}`}>\n                      {cnt.names}\n                    </a>\n                  ) : (\n                    `${cnt.names}`\n                  )}\n                  <span className=\"badge badge-primary badge-pill\">\n                    {cnt.created}\n                  </span>\n                  <span className=\"badge badge-primary badge-pill\">\n                    {isPort ? `${cnt.ports}` : \"No ports\"}\n                  </span>\n                  <span className=\"badge badge-primary badge-pill\">\n                    {cnt.status}\n                  </span>\n                  <span className=\"badge badge-primary badge-pill\">\n                    {cnt.image}\n                  </span>\n                  <span\n                    className=\"badge badge-primary badge-pill\"\n                    onClick={() => this.handleStop(containerId)}\n                  >\n                    stop\n                  </span>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nHome.getInitialProps = async function() {\n  const res = await fetch(\"http://localhost:3000/api/docker\");\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data}`);\n  return {\n    containers: data.containerList\n  };\n};\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AAAA;AAGA;AAAA;AAAA;AAIA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AAMA;AAAA;AAGA;AAAA;AAGA;AAAA;AAGA;AAAA;AAIA;AACA;AAAA;AAAA;AAFA;AAQA;AAKA;;;;AAxEA;AACA;AA0EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAKA;AADA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}